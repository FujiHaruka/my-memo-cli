[
  {
    "id": "78589c5d",
    "title": "keras on docker",
    "text": "keras on docker\n\nカレントディレクトリをkeras環境にするには。\n\nsudo docker run -it -v $(pwd):/srv gw000/keras:1.2.2-py3 bash\n\npip3 install pillow\npip3 install progressbar2\n\n",
    "updatedAt": "2017-03-16T01:55:12.351Z"
  },
  {
    "id": "7c569e48",
    "title": "公開鍵認証の設定",
    "text": "公開鍵認証の設定\nこれはサーバー側で鍵を生成する例\n\nssh-keygen -f mykey_rsa\n\nサーバー側\ncat mykey_rsa.pub >> ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n\nクライアント側\nmykey_rsa を設置",
    "updatedAt": "2017-03-16T01:58:01.083Z"
  },
  {
    "id": "2abf3433",
    "title": "tar TIPS",
    "text": "tar TIPS\nディレクトリを圧縮\ntar cfz archive.tar.gz dir\n\n解凍\ntar xfz archive.tar.gz",
    "updatedAt": "2017-03-16T02:01:19.155Z"
  },
  {
    "id": "349f9913",
    "title": "git add を取り消す",
    "text": "git add を取り消す\ngit reset .",
    "updatedAt": "2017-03-16T07:20:03.496Z"
  },
  {
    "id": "e656ba46",
    "title": "clay performance",
    "text": "clay performance\n\nUse sqlite3\n\ncreate 0: 1092.122ms\ncreate 1: 935.805ms\ncreate 2: 899.286ms\ncreate 3: 932.853ms\ncreate 4: 925.050ms\ncreate 5: 1368.860ms\ncreate 6: 909.706ms\ncreate 7: 974.239ms\ncreate 8: 926.231ms\n",
    "updatedAt": "2017-03-17T03:37:02.203Z"
  },
  {
    "id": "5287722e",
    "title": "LINE Notify by curl",
    "text": "LINE Notify by curl\ncurl -X POST -H 'Authorization: Bearer ${LINE_AUTH}' -F 'message=foobar' https://notify-api.line.me/api/notify",
    "updatedAt": "2017-03-19T05:05:15.090Z"
  },
  {
    "id": "dfd32c4e",
    "title": "物体検出 SSD",
    "text": "物体検出 SSD\nSingle Shot MultiBox Detector\n画像内の物体を位置と一緒に検出する。\nいまのところcaffe実装はあるが、chainerやkerasにはまだない。",
    "updatedAt": "2017-03-19T05:23:58.189Z"
  },
  {
    "id": "3dbc8be8",
    "title": "xargsコマンドで引数を任意の位置に",
    "text": "xargsコマンドで引数を任意の位置に\nseq 10 | xargs -IXXX echo XXX\n",
    "updatedAt": "2017-03-21T01:24:26.544Z"
  },
  {
    "id": "a3034c2c",
    "title": "画像を表示するには eog a.png",
    "text": "画像を表示するには eog a.png\nフォルダなら、\neog folder\n",
    "updatedAt": "2017-03-22T04:25:19.378Z"
  },
  {
    "id": "bcfe8218",
    "title": "ubuntuでapt-get updateに失敗していた",
    "text": "ubuntuでapt-get updateに失敗していた\n症状\n\nW: http://archive.ubuntu.com/ubuntu/dists/wily/InRelease の取得に失敗しました  期待されるエントリ 'main/binary-1386/Packages' が Release ファイル内に見つかりません (誤った sources.list エントリか、壊れたファイル)\n\nW: http://security.ubuntu.com/ubuntu/dists/wily-security/InRelease の取得に失敗しました  期待されるエントリ 'main/binary-1386/Packages' が Release ファイル内に見つかりません (誤った sources.list エントリか、壊れたファイル)\n\nW: http://archive.ubuntu.com/ubuntu/dists/wily-updates/InRelease の取得に失敗しました  期待されるエントリ 'main/binary-1386/Packages' が Release ファイル内に見つかりません (誤った sources.list エントリか、壊れたファイル)\n\nW: http://ppa.launchpad.net/zfs-native/stable/ubuntu/dists/wily/InRelease の取得に失敗しました  期待されるエントリ 'main/binary-1386/Packages' が Release ファイル内に見つかりません (誤った sources.list エントリか、壊れたファイル)\n\nE: いくつかのインデックスファイルのダウンロードに失敗しました。これらは無視されるか、古いものが代わりに使われます。\n\n対処\n\n$ sudo dpkg --remove-architecture 1386\n\nやったぜ！",
    "updatedAt": "2017-03-25T08:31:35.849Z"
  },
  {
    "id": "e2d85787",
    "title": "Node.js child_process.spawn(command[, args][, options])",
    "text": "Node.js child_process.spawn(command[, args][, options])\ncommand <string> The command to run\nargs <Array> List of string arguments\noptions <Object>\ncwd <string> Current working directory of the child process\nenv <Object> Environment key-value pairs\nargv0 <string> Explicitly set the value of argv[0] sent to the child process. This will be set to command if not specified.\nstdio <Array> | <string> Child's stdio configuration. (See options.stdio)\ndetached <boolean> Prepare child to run independently of its parent process. Specific behavior depends on the platform, see options.detached)\nuid <number> Sets the user identity of the process. (See setuid(2).)\ngid <number> Sets the group identity of the process. (See setgid(2).)\nshell <boolean> | <string> If true, runs command inside of a shell. Uses '/bin/sh' on UNIX, and 'cmd.exe' on Windows. A different shell can be specified as a string. The shell should understand the -c switch on UNIX, or /d /s /c on Windows. Defaults to false (no shell).\nReturns: <ChildProcess>\nThe child_process.spawn() method spawns a new process using the given command, with command line arguments in args. If omitted, args defaults to an empty array.\n\nNote: If the shell option is enabled, do not pass unsanitised user input to this function. Any input containing shell metacharacters may be used to trigger arbitrary command execution.\n\nA third argument may be used to specify additional options, with these defaults:\n\n{\n  cwd: undefined,\n  env: process.env\n}\nUse cwd to specify the working directory from which the process is spawned. If not given, the default is to inherit the current working directory.\n\nUse env to specify environment variables that will be visible to the new process, the default is process.env.\n\nExample of running ls -lh /usr, capturing stdout, stderr, and the exit code:\n\n```\nconst spawn = require('child_process').spawn;\nconst ls = spawn('ls', ['-lh', '/usr']);\n\nls.stdout.on('data', (data) => {\n  console.log(`stdout: ${data}`);\n});\n\nls.stderr.on('data', (data) => {\n  console.log(`stderr: ${data}`);\n});\n\nls.on('close', (code) => {\n  console.log(`child process exited with code ${code}`);\n});\n```\nExample: A very elaborate way to run ps ax | grep ssh\n```\nconst spawn = require('child_process').spawn;\nconst ps = spawn('ps', ['ax']);\nconst grep = spawn('grep', ['ssh']);\n\nps.stdout.on('data', (data) => {\n  grep.stdin.write(data);\n});\n\nps.stderr.on('data', (data) => {\n  console.log(`ps stderr: ${data}`);\n});\n\nps.on('close', (code) => {\n  if (code !== 0) {\n    console.log(`ps process exited with code ${code}`);\n  }\n  grep.stdin.end();\n});\n\ngrep.stdout.on('data', (data) => {\n  console.log(data.toString());\n});\n\ngrep.stderr.on('data', (data) => {\n  console.log(`grep stderr: ${data}`);\n});\n\ngrep.on('close', (code) => {\n  if (code !== 0) {\n    console.log(`grep process exited with code ${code}`);\n  }\n});\n```\nExample of checking for failed exec:\n```\nconst spawn = require('child_process').spawn;\nconst child = spawn('bad_command');\n\nchild.on('error', (err) => {\n  console.log('Failed to start child process.');\n});\n```\nNote: Certain platforms (OS X, Linux) will use the value of argv[0] for the process title while others (Windows, SunOS) will use command.\n\nNote: Node.js currently overwrites argv[0] with process.execPath on startup, so process.argv[0] in a Node.js child process will not match the argv0 parameter passed to spawn from the parent, retrieve it with the process.argv0 property instead.\n\n",
    "updatedAt": "2017-03-27T01:54:34.685Z"
  },
  {
    "id": "0bef2316",
    "title": "Deploy docker image",
    "text": "Deploy docker image\ndocker tag <IMAGE_ID> realglobe-docker-virtual.jfrog.io/<DOCKER_REPOSITORY>:<DOCKER_TAG>\ndocker push realglobe-docker-virtual.jfrog.io/<DOCKER_REPOSITORY>:<DOCKER_TAG>",
    "updatedAt": "2017-03-27T09:32:03.734Z"
  },
  {
    "id": "f169a87c",
    "title": "Travisからデプロイ",
    "text": "Travisからデプロイ\nhttps://oncletom.io/2016/travis-ssh-deploy/",
    "updatedAt": "2017-03-29T07:22:30.788Z"
  },
  {
    "id": "2413f391",
    "title": "rcpが失敗する時",
    "text": "rcpが失敗する時\nssh先で source .bashrc などをしているっぽい？\nnvm use 7 で結果を標準出力しているのをやめたら成功した。",
    "updatedAt": "2017-03-31T03:09:56.303Z"
  },
  {
    "id": "bddc9206",
    "title": "mongoコマンドで中を見る早見表",
    "text": "mongoコマンドで中を見る早見表\nデータベース一覧\nshow dbs;\n\nデータベースを使う\nuse hogehoge\n\nコレクション一覧\nshow collections\n\nコレクションの中身\ndb.users.find()\n\nドキュメントの抽出\n\ndb.users.find({\"team\":0});\nteam が 0 のもののみ抽出\n\ndb.users,find({\"team\":0},{\"name\":true})\nteam が 0 のドキュメントの名前だけを抽出。\n\ndb.users.find().sort({\"score\":1});\nソート。scoreの昇順。-1で降順。\n\ndb.users.findOne();\nドキュメントを一件だけ抽出。\n\ndb.users.find().limit(3);\nドキュメントを3件だけ抽出。\n\ndb.users.find().skip(2).limit(3);\n2番目のドキュメントから3つ抽出。\n\ndb.users.find().count();\n取得件数をカウント。\n\ndb.users.find( {\"name\": {$in:[\"user-0\", \"user-1\"]}} );\n名前からuser-0とuser-1のみ抽出。\n\ndb.users.find( {\"name\": {$nin:[\"user-0\", \"user-1\"]}} );\n名前からuser-0とuser-1以外のものを抽出。\n\ndb.users.find({\"email\":{$exists:true}});\nemailが存在するドキュメントのみ抽出。\n\n",
    "updatedAt": "2017-04-04T01:27:36.110Z"
  },
  {
    "id": "422978c3",
    "title": "heroku deploy by CLI",
    "text": "heroku deploy by CLI\n## prepare files\n\ncd $APP\necho \"web: npm start\" > Procfile\n\n## deploy\n\nheroku login\nheroku git:remote -a $APP\n# deploy your local heroku branch\ngit push heroku heroku:master\n\n## addons\n\nheroku addons:create cleardb:ignite\nheroku addons:create heroku-redis:hobby-dev\n\n",
    "updatedAt": "2017-04-11T02:59:41.173Z"
  },
  {
    "id": "7d900c93",
    "title": "Run script on pm2",
    "text": "Run script on pm2\npm2 start npm --name $APP -- run start:debug",
    "updatedAt": "2017-04-11T05:21:25.671Z"
  },
  {
    "id": "d683aad2",
    "title": "内部結合と外部結合(DB)",
    "text": "内部結合と外部結合(DB)\n内部結合の場合、ベースとなるテーブルから、条件にマッチするレコードがないものは削除される\n外部結合は、内部結合のようにそれぞれのテーブルの指定したカラムの値が一致するものを結合するのに加え、どちらかのテーブルにしか存在しないものに関しても取得します。\n",
    "updatedAt": "2017-04-12T01:42:40.661Z"
  },
  {
    "id": "457e7f33",
    "title": "rename command",
    "text": "rename command\nrename s/foo/bar/ ./hara/horo/hire/hare/foo.txt\nrename 's/\\.bak$//' *.bak\nrename 'y/A-Z/a-z/' *",
    "updatedAt": "2017-04-12T07:08:06.618Z"
  },
  {
    "id": "a8607290",
    "title": "shellでfor文ワンライナー",
    "text": "shellでfor文ワンライナー\nfor i in `seq 1 10`; do echo $i; done",
    "updatedAt": "2017-04-15T07:24:46.901Z"
  },
  {
    "id": "8f20d732",
    "title": "旧字変換メモ",
    "text": "旧字変換メモ\n教　教え\n, 、\n或者　ある者\n然り　しかり\n云う　いう\n少い　少ない\n救　救い\n取扱う　取り扱う\n\n段落は一行開ける\n\n引用の文語ルール\n\nカタカナの名前に注意\n\n漢字のふりがなは括弧\n\nふりがなの読み取りに要注意\n\n文頭に雑音が多い\n\n！のあとに半角スペース",
    "updatedAt": "2017-04-17T12:19:01.396Z"
  },
  {
    "id": "3e928604",
    "title": "seqに0-paddingをつける",
    "text": "seqに0-paddingをつける\nseq -w 10",
    "updatedAt": "2017-04-18T13:08:56.726Z"
  },
  {
    "id": "89e5c926",
    "title": "クリップボードにコピーするコマンド",
    "text": "クリップボードにコピーするコマンド\nubuntu\n\ncat foo.txt | xsel --clipboard --input",
    "updatedAt": "2017-04-27T01:59:10.745Z"
  },
  {
    "id": "f2de4314",
    "title": "gstreamer install",
    "text": "gstreamer install\nubuntu 16.04\n$ apt-get install gstreamer1.0-libav",
    "updatedAt": "2017-05-02T02:00:07.700Z"
  },
  {
    "id": "65238393",
    "title": "Docker host ip address from container",
    "text": "Docker host ip address from container\nip route | awk 'NR==1 {print $3}'",
    "updatedAt": "2017-05-15T06:26:27.656Z"
  },
  {
    "id": "f81fd90a",
    "title": "atom 現在の行を",
    "text": "atom 現在の行を\n現在の行を画面の1行目になるように表示したい",
    "updatedAt": "2017-05-21T02:33:28.236Z"
  },
  {
    "id": "02ec37d0",
    "title": "[docker] Delete <none> images",
    "text": "[docker] Delete <none> images\ndocker images | awk '/<none/{print $3}' | xargs docker rmi",
    "updatedAt": "2017-05-31T00:53:07.925Z"
  },
  {
    "id": "8128fbd9",
    "title": "ネットワークのstateを調べる",
    "text": "ネットワークのstateを調べる\nnetstat -a",
    "updatedAt": "2017-05-31T09:13:38.021Z"
  },
  {
    "id": "f7c0cbfa",
    "title": "ffmpegでテスト映像",
    "text": "ffmpegでテスト映像\n ffmpeg -re -f lavfi -i testsrc=duration=50:size=320x240:rate=15 ...",
    "updatedAt": "2017-06-02T02:54:37.013Z"
  },
  {
    "id": "36523948",
    "title": "githubアクセストークンでpull",
    "text": "githubアクセストークンでpull\ngit clone https://${user}:${token}@github.com/${org}/${repo}\ngit config --local user.name ${user}\ngit config --local user.email ${email}\n",
    "updatedAt": "2017-06-06T04:36:05.608Z"
  },
  {
    "id": "6b7985d7",
    "title": "音声ファイルを動画mp4に",
    "text": "音声ファイルを動画mp4に\nffmpeg -loop 1 -i rain.jpg -i psalm22.wav -shortest -r 1 -pix_fmt yuv420p video.mp4",
    "updatedAt": "2017-06-18T15:05:32.468Z"
  },
  {
    "id": "8b16d3c2",
    "title": "kidle_injectを殺す",
    "text": "kidle_injectを殺す\nsudo rmmod intel_powerclamp",
    "updatedAt": "2017-07-03T05:39:54.469Z"
  },
  {
    "id": "2c4dae3e",
    "title": "ffmpegで動画からgifを切り出す",
    "text": "ffmpegで動画からgifを切り出す\nffmpeg -ss 00:00:05 -t 10 -i input.mp4 -an -r 15 -pix_fmt rgb24 -f gif out.gif\n-s 開始時刻\n-t 秒数",
    "updatedAt": "2017-07-05T05:42:18.326Z"
  },
  {
    "id": "6b380787",
    "title": "nginxのデータ転送量を調べる",
    "text": "nginxのデータ転送量を調べる\nワンライナー\n1秒ごとに 受信 送信 のバイト数を出力する\n$ while sleep 1; do cat /proc/$nginx_pid/net/dev | awk '/eth0:/{print $2,$10}'; done",
    "updatedAt": "2017-07-18T05:57:37.177Z"
  },
  {
    "id": "4ad77918",
    "title": "dateコマンドのフォーマット",
    "text": "dateコマンドのフォーマット\n+で始まる書式で指定する。\ndate \"+%Y%m%d-%H%M%S\"",
    "updatedAt": "2017-07-20T01:06:00.555Z"
  },
  {
    "id": "9dcf4ac6",
    "title": "ネットワーク監視コマンド",
    "text": "ネットワーク監視コマンド\nnethogs\nプロセスごとの通信量がわかる",
    "updatedAt": "2017-07-20T05:52:48.394Z"
  },
  {
    "id": "e9ef4a82",
    "title": "Bitbucket API: content CRUD",
    "text": "Bitbucket API: content CRUD\nhttps://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/src/%7Bnode%7D/%7Bpath%7D",
    "updatedAt": "2017-07-26T04:23:01.088Z"
  },
  {
    "id": "ec44870c",
    "title": "Let's encryptでssl証明書",
    "text": "Let's encryptでssl証明書\nPort 443 を使っていない状態で。\n$ sudo certbot certonly --standalone -d example.com -m mail@example.com --agree-tos -n\nで証明証を発行し、Nginxに設定する。",
    "updatedAt": "2017-07-27T04:26:26.502Z"
  },
  {
    "id": "3955e23c",
    "title": "Copy between docker and host",
    "text": "Copy between docker and host\n$ docker cp <コンテナID>:/etc/my.cnf my.cnf",
    "updatedAt": "2017-07-27T04:53:34.081Z"
  },
  {
    "id": "9fd98973",
    "title": "jsdoc基本",
    "text": "jsdoc基本\n/**\n * 関数\n * @param {string} str - 文字列の引数\n * @param {number} num - 数値の引数\n * @param {Object} obj - オブジェクトの引数\n * @param {MyClass} myClass - MyClass インスタンスの引数\n */\nfunction func() {}",
    "updatedAt": "2017-08-08T02:46:31.412Z"
  },
  {
    "id": "752fbf70",
    "title": "cleanup docker volumes",
    "text": "cleanup docker volumes\n# どのコンテナからも参照されていない Data Volume のディレクトリをすべて削除\n$ docker run --rm \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v /var/lib/docker:/var/lib/docker \\\n    martin/docker-cleanup-volumes",
    "updatedAt": "2017-08-15T02:41:53.813Z"
  },
  {
    "id": "1664cb99",
    "title": "du command options",
    "text": "du command options\n-k, --kilobytes\t単位をKバイトにする\n-m, --megabytes\t単位をMバイトにする\n-c, --total\t検索したすべての容量の総計を表示する\n-S, --separate-dirs\t個々のディレクトリでサブディレクトリを含めずに表示する\n",
    "updatedAt": "2017-08-15T02:49:11.777Z"
  },
  {
    "id": "b6c6f2d1",
    "title": "shellの変数",
    "text": "shellの変数\n\nfoo=${1:-hoge}\necho $foo #$1がなかったらhogeをデフォルト値としてfooに代入する\n\n#var自身にデフォルト値としてhogeを代入としたいので以下のように書きたい\n${var:=hoge} #このままでは、hogeが展開されてしまって、hogeなんてコマンドはないとシェル怒られる\necho \"1:$var\"\n\nvar=\necho ${var:=hoge} > /dev/null #echoで変数展開をしつつ不要な出力は抑える\necho \"2:$var\"\n\nvar=\n: ${var:=hoge} #何もしないコマンド:で変数展開のみを行う\necho $var #変数展開後、varにhogeが代入される\necho \"3:$var\"\n\nvar=\n: ${var:-hoge}\necho $var #変数展開後、varにhogeが代入されない\necho \"4:$var\"",
    "updatedAt": "2017-08-24T06:03:07.333Z"
  }
]